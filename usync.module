<?php
/**
 * @file
 * ÂµSync module.
 */

use USync\AST\Node;
use USync\Context;
use USync\Parsing\PathDiscovery;
use USync\Parsing\YamlParser;
use USync\Runner;

/**
 * View mode variable nae.
 */
const USYNC_VAR_VIEW_MODE = 'usync_view_mode';

/**
 * Load compatibility layer with other modules.
 */
require_once __DIR__ . '/usync.compat.inc';

/**
 * Implements hook_init().
 */
function usync_init() {
  //$discovery = new PathDiscovery(); usync($discovery->discover(__DIR__ . '/sample/reallife', new YamlParser()));
}

/**
 * Implements hook_entity_info_alter().
 */
function usync_entity_info_alter(&$entity_info) {

  // @todo Export other entity options.

  // Export view modes we found during synchronization.
  foreach (variable_get(USYNC_VAR_VIEW_MODE, array()) as $entity_type => $view_modes) {
    if (isset($entity_info[$entity_type])) {
      // @todo Add a "strict" mode that disables all other view modes.
      foreach ($view_modes as $name => $label) {
        $entity_info[$entity_type]['view modes'][$name] = array(
          'label' => $label,
          'custom settings' => true
        );
      }
    }
  }
}

/**
 * Do sync.
 *
 * @param \USync\Node $graph
 *   System configuration.
 */
function usync(Node $graph) {
  $tx = null;

  try {
    $tx = db_transaction();

    $runner = new Runner();
    $runner->run(new Context($graph));

    unset($tx); // Explicit commit.

  } catch (\Exception $e) {
    if ($tx) {
      try {
        $tx->rollback();
      } catch (Exception $e2) {}
    }

    drupal_set_message($e->getMessage(), 'error');
    return false;
  }

  return true;
}
